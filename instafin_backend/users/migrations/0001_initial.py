# Generated by Django 5.1.5 on 2025-01-20 13:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=15, null=True, unique=True),
                ),
                ("date_of_birth", models.DateField(null=True)),
                (
                    "national_id",
                    models.CharField(max_length=20, null=True, unique=True),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("credit_score", models.IntegerField(blank=True, null=True)),
                ("risk_level", models.CharField(blank=True, max_length=20)),
                (
                    "current_balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="PreferenceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("changed_field", models.CharField(max_length=50)),
                ("old_value", models.JSONField()),
                ("new_value", models.JSONField()),
                ("change_reason", models.CharField(max_length=200, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="preference_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preference_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserCommunication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("SMS", "SMS"),
                            ("EMAIL", "Email"),
                            ("WHATSAPP", "WhatsApp"),
                            ("IN_APP", "In-App"),
                        ],
                        max_length=10,
                    ),
                ),
                ("message_type", models.CharField(max_length=50)),
                ("content", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("READ", "Read"),
                            ("FAILED", "Failed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("delivered_at", models.DateTimeField(null=True)),
                ("read_at", models.DateTimeField(null=True)),
                ("metadata", models.JSONField(default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserEngagementMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("engagement_score", models.FloatField(default=0.0)),
                ("last_login_date", models.DateTimeField(null=True)),
                ("total_interactions", models.PositiveIntegerField(default=0)),
                ("interaction_frequency", models.JSONField(default=dict)),
                ("channel_engagement", models.JSONField(default=dict)),
                ("response_rates", models.JSONField(default=dict)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="engagement_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User engagement metrics",
            },
        ),
        migrations.CreateModel(
            name="UserFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=50)),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                ("feedback_text", models.TextField()),
                ("interaction_id", models.CharField(max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[
                            ("EN", "English"),
                            ("ES", "Spanish"),
                            ("FR", "French"),
                        ],
                        default="EN",
                        max_length=2,
                    ),
                ),
                (
                    "preferred_contact",
                    models.CharField(
                        choices=[
                            ("SMS", "SMS"),
                            ("EMAIL", "Email"),
                            ("WHATSAPP", "WhatsApp"),
                            ("IN_APP", "In-App"),
                        ],
                        default="EMAIL",
                        max_length=10,
                    ),
                ),
                ("marketing_opt_in", models.BooleanField(default=False)),
                ("notification_preferences", models.JSONField(default=dict)),
                ("communication_channels", models.JSONField(default=dict)),
                ("active_channels", models.JSONField(default=dict)),
                ("custom_preferences", models.JSONField(default=dict)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("employment_status", models.CharField(max_length=50, null=True)),
                ("income_range", models.CharField(max_length=50, null=True)),
                ("address", models.JSONField(null=True)),
                ("employment_details", models.JSONField(null=True)),
                ("metadata", models.JSONField(default=dict)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="users_user_phone_n_7fe504_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["national_id"], name="users_user_nationa_7d24c6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="preferencehistory",
            index=models.Index(
                fields=["user", "changed_field", "timestamp"],
                name="users_prefe_user_id_770f0f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="usercommunication",
            index=models.Index(
                fields=["user", "channel", "sent_at"],
                name="users_userc_user_id_2a3c70_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="usercommunication",
            index=models.Index(
                fields=["status", "sent_at"], name="users_userc_status_946d01_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userfeedback",
            index=models.Index(
                fields=["user", "category", "created_at"],
                name="users_userf_user_id_1e876d_idx",
            ),
        ),
    ]
